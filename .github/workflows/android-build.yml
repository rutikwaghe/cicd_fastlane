name: Build Android App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js (React Native requires Node)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.13.1

      # 3. Setup Java (Android requires Java)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 4. Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 5. Install dependencies
      - name: Install dependencies
        run: yarn install

      # 6. Decode and save keystore
      - name: Decode keystore from base64
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/groceryapp_keystore.jks

      - name: Inject signing info into gradle.properties
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=groceryapp_keystore.jks" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties

      # 8. Build Android APK
      - name: Build Android APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew clean
          ./gradlew assembleRelease

      # 9. Build Android AAB
      - name: Build Android AAB
        run: |
          cd android
          ./gradlew bundleRelease

      # 10. Upload APK artifact
      - name: Upload APK Release
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: android/app/build/outputs/apk/release/*.apk

      # 11. Upload AAB artifact
      - name: Upload AAB Release
        uses: actions/upload-artifact@v4
        with:
          name: aab-release
          path: android/app/build/outputs/bundle/release/*.aab

      # ===== Add Stallion OTA upload step =====

      - name: Install Stallion CLI
        run: |
          yarn add react-native-stallion
          yarn global add stallion-cli
          yarn add -D stallion-cli


      - name: Publish release to Stallion OTA
        env:
          STALLION_API_TOKEN: ${{ secrets.STALLION_API_TOKEN }}
        run: |
          stallion publish-bundle --upload-path=mbstyx/cicd_fastlane/secondtry --platform=android --release-note="GitHub Actions Release $GITHUB_RUN_NUMBER" android/app/build/outputs/bundle/release/app-release.aab

      # - name: Install Stallion CLI
      #   run: |
      #     npm install --save-dev stallion-cli
      #     npm install -g @stallion/cli
      #      npm install react-native-stallion

      # - name: Publish release to Stallion OTA
      #   env:
      #     STALLION_API_TOKEN: ${{ secrets.STALLION_API_TOKEN }}
      #   run: |
      #     # Upload AAB bundle - change path or platform as needed
      #     stallion publish-bundle --upload-path=mbstyx/cicd_fastlane/secondtry --platform=android --release-note="GitHub Actions Release $GITHUB_RUN_NUMBER" android/app/build/outputs/bundle/release/app-release.aab

      # 12. Bundle JS for OTA update
      # - name: Bundle JS for Stallion OTA
      #   run: |
      #     npx react-native bundle \
      #       --platform android \
      #       --dev false \
      #       --entry-file index.js \
      #       --bundle-output android/app/build/generated/assets/react/release/index.android.bundle \
      #       --assets-dest android/app/build/generated/res/react/release

      # # 13. Install Stallion CLI
      # - name: Install Stallion CLI
      #   run: npm install --global stallion-cli

      # # 14. Stallion OTA Deploy
      # - name: Stallion OTA Deploy
      #   run: |
      #     stallion release \
      #       --platform android \
      #       --app-id "${{ secrets.STALLION_APP_ID }}" \
      #       --bundle-path android/app/build/generated/assets/react/release/index.android.bundle \
      #       --release-note "Automated release from GitHub Actions"
      #   env:
      #     STALLION_API_KEY: ${{ secrets.STALLION_API_KEY }}
