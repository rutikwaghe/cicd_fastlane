name: Build & Upload Android App

on:
  push:
    branches:
      - main
  workflow_dispatch: # Manual trigger
    inputs:
      track:
        description: 'Where to deploy (internal / production)'
        required: true
        default: 'internal'
      release_status:
        description: 'Release status (draft / completed)'
        required: true
        default: 'draft'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.13.1

      # 3. Setup Java
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 4. Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 5. Install dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # 6. Decode and save keystore
      - name: Decode keystore from base64
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/groceryapp_keystore.jks

      # 7. Inject signing info into gradle.properties
      - name: Inject signing info into gradle.properties
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=groceryapp_keystore.jks" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties

      # 8. Build AAB
      - name: Build Android AAB
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew clean bundleRelease

      # 9. Upload AAB artifact
      - name: Upload AAB Release
        uses: actions/upload-artifact@v4
        with:
          name: aab-release
          path: android/app/build/outputs/bundle/release/*.aab

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download AAB from previous job
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: aab-release
          path: ./release

      # Install Fastlane
      - name: Install Fastlane
        run: sudo gem install fastlane -NV

      # Deploy to Google Play Store
      - name: Deploy to Google Play
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        run: |
          mkdir -p android/fastlane
          echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" | jq '.' > android/fastlane/playstore-credentials.json
          cd android
          fastlane supply \
            --aab ../release/*.aab \
            --track ${{ github.event.inputs.track }} \
            --json_key fastlane/playstore-credentials.json \
            --package_name com.cicdpipe \
            --release_status ${{ github.event.inputs.release_status }}
